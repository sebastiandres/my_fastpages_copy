
var documents = [{
    "id": 0,
    "url": "https://sebastiandres.github.io/404.html",
    "title": "",
    "body": " 404 Page not found :(  The requested page could not be found. "
    }, {
    "id": 1,
    "url": "https://sebastiandres.github.io/about/",
    "title": "About Me",
    "body": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. This website is powered by fastpages 1.       a blogging platform that natively supports Jupyter notebooks in addition to other formats.  &#8617;    "
    }, {
    "id": 2,
    "url": "https://sebastiandres.github.io/categories/",
    "title": "Tags",
    "body": "Contents: {% if site. categories. size &gt; 0 %} {% for category in site. categories %} {% capture category_name %}{{ category | first }}{% endcapture %} {{ category_name }}{% endfor %}{% endif %} {% for category in site. categories %}  {% capture category_name %}{{ category | first }}{% endcapture %} &lt;h3 id = {{ category_name }} &gt;&lt;i class= fas fa-tags category-tags-icon &gt;&lt;/i&gt;&lt;/i&gt; {{ category_name }}&lt;/h3&gt;&lt;a name= {{ category_name | slugize }} &gt;&lt;/a&gt;{% for post in site. categories[category_name] %}{%- assign date_format = site. minima. date_format | default:  %b %-d, %Y  -%}&lt;article class= archive-item &gt; &lt;p class= post-meta post-meta-title &gt;&lt;a class= page-meta  href= {{ site. baseurl }}{{ post. url }} &gt;{{post. title}}&lt;/a&gt; • {{ post. date | date: date_format }}&lt;/p&gt;&lt;/article&gt;{% endfor %} {% endfor %}"
    }, {
    "id": 3,
    "url": "https://sebastiandres.github.io/images/copied_from_nb/",
    "title": "",
    "body": "WarningDo not manually save images into this folder. This is used by GitHub Actions to automatically copy images.  Any images you save into this folder could be deleted at build time. "
    }, {
    "id": 4,
    "url": "https://sebastiandres.github.io/html/fastpages/2020/03/10/Redirect.html",
    "title": "Redirigiendo al blog",
    "body": "2020/03/10 - Aún no termino de traducir los posts “originales” y ya estoy pensando en el próximo post. Es un buen signo de que el nuevo sistema es más fácil de usar. Al seguir las instrucciones para configurar fastpages, pide que el repositorio no sea “github_username. github. io”. En mi caso y después de algunas pruebas, me incliné por “blog”, por lo que el blog queda en https://sebastiandres. github. io/blog/. Sin embargo, me pareció que rompe la expectativa, puesto que https://sebastiandres. github. io arroja un error (página 404-no encontrada). Se me ocurrió que una forma fácil de solucionar lo anterior es tener un repositorio “github_username. github. io”, en mi caso sebastiandres. github. io, y que contuviera una página html que redirigiera a https://sebastiandres. github. io/blog/. Un “hack” de 2 minutos y que permite responder a la expectativa, sin mayores dolores de cabeza de configuración o código: &lt;!DOCTYPE html&gt;&lt;html lang= en &gt;&lt;head&gt;&lt;meta http-equiv= Refresh  content= 0; url=https://sebastiandres. github. io/my_fastpages_copy/  /&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Redirigiendo al &lt;a href= https://sebastiandres. github. io/my_fastpages_copy/ &gt;blog&lt;/a&gt;. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
    }, {
    "id": 5,
    "url": "https://sebastiandres.github.io/2020/03/09/Test-3-Post-mediante-word.html",
    "title": "Test 3 Post Mediante Word",
    "body": "2020/03/09 - -– title: “My Title” summary: “Awesome summary” toc: false comments: true categories: [word, fastpages, jupyter] metadata_key1: metadata_value1 metadata_key2: metadata_value2 -– Ejemplo de un títuloEs posible hacer un post desde Word, sin problemas. Convierte todas las fonts a una Font común y con el mismo tamaño. Pero respeta las negritas y las itálicas. Puedes poner listas numeradas:    Por     Ejemplo     Así  O listas no-numeradas:    Por     Ejemplo     Asá  Enlaces: Insertar links como éste Nota mental: Evitar estas funcionalidades   Código no funciona bien: todo lo convierte a la font nativa del sitio web (blog).     Sólo indexa hasta nivel de título: subtitulo y demás quedan con jerarquía de título.     Las imágenes no quedan bien indexadas (al menos, no me resultó). De todas maneras, desaconsejado.     Tampoco me funcionaron los tags (etiquetas) o usar los keywords para definir nombre del post y otros.  "
    }, {
    "id": 6,
    "url": "https://sebastiandres.github.io/fastpages/jupyter/2020/02/20/Test-2-Post-mediante-jupyter-notebook.html",
    "title": "Fastpages - Tutorial en Español",
    "body": "2020/02/20 -           Acerca de Este notebook es una traducción del tutorial de fastpages con jupyter notebooks. Con fastpages podras guardar tus jupyter notebooks en una carpeta llamada _notebooks, ¡y se convertirán automáticamente en posts de Jekyll! &lt;- Explicar acá que es Jekyll. Front Matter : Front Matter is a markdown cell at the beginning of your notebook that allows you to inject metadata into your notebook. For example: Setting toc: true will automatically generate a table of contentsSetting badges: true will automatically include GitHub and Google Colab links to your notebook. Setting comments: true will enable commenting on your blog post, powered by utterances. More details and options for front matter can be viewed on the front matter section of the README. Markdown Shortcuts : put a #hide flag at the top of any cell you want to completely hide in the docs put a #collapse flag at the top of any cell if you want to hide that cell by default, but stil have it be visible to the reader:              #collapseimport pandas as pdimport altair as alt       put a #collapse_show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it:              #collapse_showcars = &#39;https://vega. github. io/vega-datasets/data/cars. json&#39;movies = &#39;https://vega. github. io/vega-datasets/data/movies. json&#39;sp500 = &#39;https://vega. github. io/vega-datasets/data/sp500. csv&#39;stocks = &#39;https://vega. github. io/vega-datasets/data/stocks. csv&#39;flights = &#39;https://vega. github. io/vega-datasets/data/flights-5k. json&#39;       Regular Charts with Matplotlib : Don't forget to use ´%matplotlib inline´ and/or ´%matplotlib widget´ to allow for interactiveness in jupyter notebooks.       %matplotlib inline%matplotlib widgetfrom matplotlib import pyplot as pltplt. figure(figsize=(8,6))plt. plot([1,2,4], [4, 7, 5], &quot;-or&quot;, lw=2. 0)plt. xlabel(&quot;Some x label [x units]&quot;)plt. ylabel(&quot;Some y label [y units]&quot;)plt. suptitle(&quot;Some Good Title&quot;)plt. show()    Interactive Charts With Altair : Charts made with Altair remain interactive.  Example charts taken from this repo, specifically this notebook. Example 1: DropDown :       # single-value selection over [Major_Genre, MPAA_Rating] pairs# use specific hard-wired values as the initial selected valuesselection = alt. selection_single(  name=&#39;Select&#39;,  fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;],  init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;},  bind={&#39;Major_Genre&#39;: alt. binding_select(options=genres), &#39;MPAA_Rating&#39;: alt. binding_radio(options=mpaa)}) # scatter plot, modify opacity based on selectionalt. Chart(movies). mark_circle(). add_selection(  selection). encode(  x=&#39;Rotten_Tomatoes_Rating:Q&#39;,  y=&#39;IMDB_Rating:Q&#39;,  tooltip=&#39;Title:N&#39;,  opacity=alt. condition(selection, alt. value(0. 75), alt. value(0. 05)))    Example 2: Tooltips :       alt. Chart(movies). mark_circle(). add_selection(  alt. selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;])). encode(  x=&#39;Rotten_Tomatoes_Rating:Q&#39;,  y=alt. Y(&#39;IMDB_Rating:Q&#39;, axis=alt. Axis(minExtent=30)), # use min extent to stabilize axis title placement  tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;]). properties(  width=600,  height=400)    Example 3: More Tooltips :       # select a point for which to provide details-on-demandlabel = alt. selection_single(  encodings=[&#39;x&#39;], # limit selection to x-axis value  on=&#39;mouseover&#39;, # select on mouseover events  nearest=True,  # select data point nearest the cursor  empty=&#39;none&#39;   # empty selection includes no data points)# define our base line chart of stock pricesbase = alt. Chart(). mark_line(). encode(  alt. X(&#39;date:T&#39;),  alt. Y(&#39;price:Q&#39;, scale=alt. Scale(type=&#39;log&#39;)),  alt. Color(&#39;symbol:N&#39;))alt. layer(  base, # base line chart    # add a rule mark to serve as a guide line  alt. Chart(). mark_rule(color=&#39;#aaa&#39;). encode(    x=&#39;date:T&#39;  ). transform_filter(label),    # add circle marks for selected time points, hide unselected points  base. mark_circle(). encode(    opacity=alt. condition(label, alt. value(1), alt. value(0))  ). add_selection(label),  # add white stroked text to provide a legible background for labels  base. mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2). encode(    text=&#39;price:Q&#39;  ). transform_filter(label),  # add text labels for stock prices  base. mark_text(align=&#39;left&#39;, dx=5, dy=-5). encode(    text=&#39;price:Q&#39;  ). transform_filter(label),    data=stocks). properties(  width=700,  height=400)    Data Tables : You can display tables per the usual way in your blog:       movies = &#39;https://vega. github. io/vega-datasets/data/movies. json&#39;df = pd. read_json(movies)# display table with pandasdf[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;,   &#39;Production_Budget&#39;, &#39;IMDB_Rating&#39;]]. head()           Title   Worldwide_Gross   Production_Budget   IMDB_Rating         0   The Land Girls   146083. 0   8000000. 0   6. 1       1   First Love, Last Rites   10876. 0   300000. 0   6. 9       2   I Married a Strange Person   203134. 0   250000. 0   6. 8       3   Let's Talk About Sex   373615. 0   300000. 0   NaN       4   Slam   1087521. 0   1000000. 0   3. 4     Images : Local Images : You can reference local images and they will be copied and rendered on your blog automatically.  You can include these with the following markdown syntax: ![](my_icons/fastai_logo. png) Remote Images : Remote images can be included with the following markdown syntax: ![](https://image. flaticon. com/icons/svg/36/36686. svg) Animated Gifs : Animated Gifs work, too! ![](https://upload. wikimedia. org/wikipedia/commons/7/71/ChessPawnSpecialMoves. gif) Captions : You can include captions with markdown images like this: ![](https://www. fast. ai/images/fastai_paper/show_batch. png  Credit: https://www. fast. ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/ ) Other Elements Tweetcards : Typing &gt; twitter: https://twitter. com/jakevdp/status/1204765621767901185?s=20 will render this:Altair 4. 0 is released! https://t. co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t. co/roXmzcsT58 . . . read on for some highlights. pic. twitter. com/vWJ0ZveKbZ &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Youtube Videos : Typing &gt; youtube: https://youtu. be/XfoYk_Z5AkI will render this: Boxes / Callouts : Typing &gt; Warning: There will be no second warning! will render this:    Warning: There will be no second warning! Typing &gt; Important: Pay attention! It's important. will render this:    Important: Pay attention! It&#8217;s important. Typing &gt; Tip: This is my tip. will render this:    Tip: This is my tip. Typing &gt; Note: Take note of this. will render this:    Note: Take note of this. Typing &gt; Note: A doc link to [an example website: fast. ai](https://www. fast. ai/) should also work fine. will render in the docs:    Note: A doc link to an example website: fast. ai should also work fine. "
    }, {
    "id": 7,
    "url": "https://sebastiandres.github.io/fastpages/markdown/2020/01/14/Test-1-Post-mediante-markdown-copy.html",
    "title": "Test 1: Post mediante Markdown",
    "body": "2020/01/14 - Configuración básica: Un blog post files debe tener el siguiente formato: AAAA-MM-DD-filename. md Donde AAAA es el año con 34 dígitos, MM es el mes con 2 dígitos, DD es el día con 2 dígitos, y filename es un nombre de referencia para recordarte de que se trataba el post (el título real se indica adentro). La extensión . md se usa para archivos markdown. La primera línea del archivo debe comenzar con # Mi título para que se defina “Mi título” como el título del post. Dentro del post, se pueden hacer subtítulos ## Mi subtítulo (y sub-subtítulos, ### Mi sub-subtítulo, pero ya es desaconsejado. ) Configuración avanzadaPara agregar una descripción, categorías (etiquetas/tags), y toc (table of contents - tabla de contenidos) es necesario agregar un contenido específico encerrado por ---. Por ejemplo, las primeras 10 líneas de este post son las siguientes: ---toc: truedescription: Ejemplo usando markdown con fastpages. categories: [fastpages, markdown]---# Test 1: Post mediante Markdown## Configuración básicaUn blog post files debe tener el siguiente formato:Para desactivar la funcionalidad basta con eliminarla o dejarla vacía. Formato básico: Se pueden usar cursivas, negritas, negritas cursivas, código, y crear links. También notas a pie de página 1. También una línea horizontal: Listas: Acá hay una lista (regular):  item 1 item 2Acá hay una lista numerada:  item 1 item 2Citas y otras formas de destacar: Citas:  Esta es una cita Alerta:    Puedes incluir alertasInformación:    Puedes destacar informaciónImágenes: Código: Texto preformateado general: # Do a thing in a programming languagedo_thing()Código de python y su salida: # Prints '2'print(1+1)2Tablas:       Columna 1   Columna 2         Una cosa   Otra cosa       Una cosa más   Otra cosa más   Tweets: Altair 4. 0 is released! https://t. co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t. co/roXmzcsT58 . . . read on for some highlights. pic. twitter. com/vWJ0ZveKbZ &mdash; Jake VanderPlas (@jakevdp) December 11, 2019Notas a pie de página:       Esta es la nota al pie de página.  &#8617;    "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')
    this.metadataWhitelist = ['position']

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>No results found...</li>";
        }
    }
    return false;
}